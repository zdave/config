#!/usr/bin/env fish

set exit_status 0

function mk-link -a link -a target
    mkdir -p -- (dirname -- $link)
    if not set -l current (readlink -- $link); or test $current != $target
        if not ln -sT -- $target $link
            set exit_status 1
        end
    end
end

set dir (dirname -- (realpath -- (status filename)))

function mk-plain-link -a path
    mk-link ~/$path $dir/$path
end

function mk-dot-link -a path
    mk-link ~/.$path $dir/$path
end

mkdir -p ~/.ssh/master

mk-plain-link bin/bash-source-env-diff
mk-plain-link bin/calc-replay-gain
if test -x /usr/bin/discord
    mk-plain-link bin/discord
end
if test -x /usr/bin/element-desktop
    mk-plain-link bin/element-desktop
end
mk-plain-link bin/env-diff
mk-plain-link bin/env-dump
mk-plain-link bin/org-music
mk-plain-link bin/rgit
mk-plain-link bin/rre
if test -x /usr/bin/spotify
    mk-plain-link bin/spotify
end
if type -fq feh
    mk-plain-link bin/wallpaper
end

if set x_terminal_emulator ( \
        which alacritty 2>/dev/null; or \
        which urxvt 2>/dev/null; or \
        which xterm 2>/dev/null)
    mk-link ~/bin/x-terminal-emulator $x_terminal_emulator
end

mk-dot-link Xresources
mk-dot-link config/RawTherapee/profiles/default.pp3
mk-dot-link config/alacritty/alacritty.yml
mk-dot-link config/bat
mk-dot-link config/chrome-flags.conf
mk-dot-link config/fish
mk-dot-link config/fontconfig
mk-dot-link config/git/config
mk-dot-link config/git/ignore-global
mk-dot-link config/gtk-3.0/settings.ini
mk-dot-link config/mimeapps.list
mk-dot-link config/picom/picom.conf
mk-dot-link config/zathura/zathurarc
mk-dot-link gmail-smtp-password.gpg
mk-dot-link gnupg/gpg-agent.conf
mk-dot-link gnupg/scdaemon.conf
mk-dot-link gtkrc-2.0
mk-dot-link mailrc
mk-dot-link msmtprc
mk-dot-link parallel/will-cite
mk-dot-link profile
mk-dot-link profile-env
mk-dot-link python-startup.py
mk-dot-link ssh/authorized_keys
mk-dot-link ssh/config
mk-dot-link vim
mk-dot-link vimrc
mk-dot-link zcash/zcash.conf

if test -d ~/Dropbox/wallpapers
    mk-link ~/wallpapers ~/Dropbox/wallpapers
end

# Always want pulseaudio running, not just when something tries to connect
if type -q systemctl; and test (count (systemctl --user --no-legend list-unit-files pulseaudio.service)) -ne 0
    systemctl --user --quiet enable pulseaudio.service
end

exit $exit_status
